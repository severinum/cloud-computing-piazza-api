name: Publish DockerHub deploy GCP K8S

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    if: |
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'skip-release') == false
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Calculate SemVer value
        id: calculate
        uses: UKHomeOffice/sas-github-workflows/.github/actions/calculate-semver-value@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_to_highest: ${{ github.base_ref == 'main' }}

      - name: Tag Repository
        uses: UKHomeOffice/semver-tag-action@v3
        with:
          tag: ${{ steps.calculate.outputs.version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          move_major_tag: ${{ inputs.moveMajor || 'true' }}
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            name/app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
       
      - name: Install the gcloud cli
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      # - name: Build and Push the Docker Image to Artifact Registry
      #   env:
      #     GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      #   run: | 
      #     gcloud auth configure-docker us-east1-docker.pkg.dev
      #     docker build -t us-east1-docker.pkg.dev/$GOOGLE_PROJECT_ID/piazza-api/piazza-api:latest .
      #     docker push us-east1-docker.pkg.dev/$GOOGLE_PROJECT_ID/piazza-api/piazza-api:latest

      - name: Deploy to GKE
        env: 
            GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
            MONGO_USER: ${{ secrets.MONGO_USER }}
            MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
            MONGO_CLUSTER: ${{ secrets.MONGO_CLUSTER }}
            MONGO_COLLECTION: ${{ secrets.MONGO_COLLECTION }}
            TOKEN_SECRET_STRING: ${{ secrets.JWT_TOKEN_SECRET }}
        run: |
            gcloud container clusters get-credentials cloud-computing-cluster --region us-central1
            sed -i "s/GOOGLE_PROJECT_ID/$GOOGLE_PROJECT_ID/g" resources.yml
            sed -i "s/TOKEN_SECRET_STRING/$TOKEN_SECRET_STRING/g" resources.yml
            sed -i "s/MONGO_USER/$MONGO_USER/g" resources.yml
            sed -i "s/MONGO_PASSWORD/$MONGO_PASSWORD/g" resources.yml
            sed -i "s/MONGO_CLUSTER/$MONGO_CLUSTER/g" resources.yml
            sed -i "s/MONGO_COLLECTION/$MONGO_COLLECTION/g" resources.yml
            kubectl apply -f resources.yml